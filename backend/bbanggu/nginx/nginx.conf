worker_processes auto;

events {
    worker_connections 1024;
}


http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    sendfile on;
    keepalive_timeout 65;


    server {
    	listen 80;
        server_name i12d102.p.ssafy.io;

        location /.well-know/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name i12d102.p.ssafy.io;

        ssl_certificate /etc/letsencrypt/live/p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/p.ssafy.io/privkey.pem;

        # 백엔드 location
        location /api {
            proxy_pass http://bbanggu-server:8081/;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
        }

        location /uploads/ {
            alias /home/ubuntu/uploads/;
            try_files $uri $uri/ =404;
            add_header Cache-Control "public, max-age=31536000";
            access_log off;

            # CORS 설정 추가
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
        }

        location / {
            proxy_pass http://bbanggu;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

	    # CORS 설정
            add_header 'Access-Control-Allow-Origin' 'http://localhost:5173';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';

           if ($request_method = 'OPTIONS') {
               return 204;
           }
        }

        location /jenkins {
            proxy_pass http://jenkins:8080/jenkins; 
	        proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Jenkins 관련 추가 설정
            proxy_set_header X-Jenkins-Context "/jenkins";
            proxy_redirect http:// https://;
        }
    }
}

