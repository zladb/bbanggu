plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.ec4j.editorconfig' version '0.0.3'
    id 'checkstyle'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.json:json:20210307'

    // Spring Boot Core Dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    // Hibernate Validator
    implementation 'org.hibernate.validator:hibernate-validator:8.0.2.Final'

    // Jackson for JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Spring Security Core
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // SpringDoc OpenAPI (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.1'

    // Lombok for Boilerplate Code
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Devtools for Hot Reload
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // JWT (Json Web Token)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // MySQL Connector
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

checkstyle {
    toolVersion = "10.12.1"
    configFile = file("${rootDir}/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": file("${rootDir}/naver-checkstyle-suppressions.xml")] // ✅ Suppression 설정 추가
    ignoreFailures = true // 오류가 발생해도 빌드가 중단되지 않도록 설정
}

